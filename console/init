#!/usr/bin/env bash
set -euo pipefail

DIRECTORY_TMP="$PATH_BIN/.tmp"

create_folder_tmp(){
  [[ "${GLOBAL_EFDE_CONFIG['EFDE_MODE_DEVELOP']}" = "true" ]] && rm -rf $DIRECTORY_TMP

  [ ! -d $DIRECTORY_TMP ] && mkdir -p $DIRECTORY_TMP; chmod +x $DIRECTORY_TMP
}

create_construct(){
  # Load basic module
  MODULE_NAME="common"
  IMPORT_FILE="core"
  PATH_SOURCE="$PATH_CONSOLE/$MODULE_NAME/$IMPORT_FILE"
  PATH_TARGET="$DIRECTORY_TMP/$MODULE_NAME.$IMPORT_FILE"

  if [ "${GLOBAL_EFDE_CONFIG['EFDE_MODE_DEVELOP']}" = "true" ] || [ ! -f "$PATH_TARGET" ]; then
      sed "/sed/! s/_mod_/$MODULE_NAME.$IMPORT_FILE/g" "$PATH_SOURCE" > "$PATH_TARGET"
  fi

  load_scripts "$PATH_TARGET"
  load_scripts "$PATH_CONSOLE/$MODULE_NAME"
}

load_modules(){
  local PATH_TO_INSPECT="$@"
  DIRECTORIES=$(find "$PATH_TO_INSPECT" -maxdepth 1 -type d ! -path "$PATH_TO_INSPECT" ! -name "$(basename "$PATH_TO_INSPECT")" -printf "%f\n")
  for DIRECTORY in $DIRECTORIES; do
    [ "$DIRECTORY" = "common" ] && continue

    PATH_TARGET="$PATH_TO_INSPECT/$DIRECTORY"
    local PATH_TASKS_EXISTS="$PATH_TARGET/tasks"
    if [ -d "$PATH_TASKS_EXISTS" ]; then
      load_scripts "$PATH_TARGET"
    else
      load_modules "$PATH_TARGET"
    fi
  done
}

load_scripts(){
  local FUNCTION_LOAD="common.core.load_module"
  if [ "$(type -t "$FUNCTION_LOAD")" = "function" ] ; then
    ${FUNCTION_LOAD} "$@"
  else
    source "$@"
  fi
}

main() {
  create_folder_tmp
  create_construct
  load_modules $PATH_CONSOLE
}

main






