#!/usr/bin/env bash
set -euo pipefail
declare -gA GLOBAL_SYMFONY_INSTALL=(
  [INSTALL_WEBAPP]=false
  [MESSAGE_WARNING]="Default will install symfony for microservice projects or apis"
  [MESSAGE_ASK]=$(common.tasks.message.msg_color warning "Do you want to install the packages for webapp?")
  [MESSAGE_CLONE_GIT]="Enter the url of your repository"
  [MESSAGE_CLONE_URL]=$(common.tasks.message.msg_color warning "Enter URL (https):")
)

_mod_.run_app_cli(){
    # shellcheck disable=SC2145
    symfony.tasks.main.run_command_app_cli "$@"
}

_mod_.choose_php_versions(){
  local VERSION_PHP
  local VERSION_SYMFONY=""

  while [ "$VERSION_SYMFONY" == "" ]; do
    symfony.tasks.menu.create_environment_version
    VERSION_SYMFONY=$(common.tasks.menu.get_selected_value)
  done

  VERSION_PHP=$( [ "$VERSION_SYMFONY" == "5" ] && echo "7.4" || echo "8.2" )

  GLOBAL_SETUP_IMPLEMENTION['EFDE_PROJECT_IMPLEMENTION']="symfony"
  GLOBAL_SETUP_IMPLEMENTION['EFDE_PROJECT_VERSION']="$VERSION_SYMFONY"
  GLOBAL_SETUP_IMPLEMENTION['PHP_VERSION']="$VERSION_PHP"
}

_mod_.question_type(){
    # Type Instalation API or WEBAPP
    common.tasks.message.info "${GLOBAL_SYMFONY_INSTALL['MESSAGE_WARNING']}"
    if common.tasks.prompt.confirm_default_yes "${GLOBAL_SYMFONY_INSTALL['MESSAGE_ASK']}" ; then
      GLOBAL_SYMFONY_INSTALL['INSTALL_WEBAPP']=true
    fi
}

_mod_.get_env_version(){
  local PATH_ENV="$(efde.tasks.implemention.get_current_path_env_file)"
  echo $(common.tasks.env_variable.get_variable "EFDE_PROJECT_VERSION" "$PATH_ENV")
}

_mod_.set_database_variables(){
  mysql.tasks.main.set_database_variable_in_env_file
}

_mod_.prepare_setup_environment(){
  _mod_.set_database_variables
  efde.tasks.implemention.setup_environment
  # IMPORTANT: Siempre entro al proyecto
  common.tasks.command_line.run false false "cd $(efde.tasks.implemention.get_new_path_project)"
}

_mod_.docker_start(){
  docker.tasks.main.apache_stop
  docker.tasks.main.dp_all_stop
  docker.tasks.main.dp_build
}

_mod_.new_environment(){
  GLOBAL_SETUP_IMPLEMENTION['EFDE_PROJECT_IMPLEMENTION']="symfony"
  GLOBAL_SETUP_IMPLEMENTION['EFDE_PROJECT_VERSION']="7"
  GLOBAL_SETUP_IMPLEMENTION['PHP_VERSION']="8.2"

  _mod_.question_type
  _mod_.prepare_setup_environment
  _mod_.docker_start
  _mod_.run_app_cli "composer create-project symfony/skeleton:$(_mod_.get_env_version).* ."
  [ "${GLOBAL_SYMFONY_INSTALL['INSTALL_WEBAPP']}" = "true" ] && _mod_.run_app_cli "composer require webapp"
  symfony.tasks.main.permissions_fix

  common.tasks.message.success "\nProject installed successfully, check the url \n- http://localhost \n- http://localhost:8080\n"
  efde.tasks.implemention.clear_global_variables
}

_mod_.clone_environment(){
  _mod_.choose_php_versions
  _mod_.prepare_setup_environment
  _mod_.docker_start
  _mod_.clone_repository
  symfony.tasks.main.permissions_fix

  common.tasks.message.warning "Reminder:\n- Review config app/.env\n- Import project database"
  common.tasks.message.success "Project installed successfully, check the url \n- http://localhost \n- http://localhost:8080\n"
  efde.tasks.implemention.clear_global_variables
}

_mod_.clone_repository(){
  common.tasks.command_line.run true false "sudo chown -R $UID ./app"
  common.tasks.git.request_url_and_clone_repository
}